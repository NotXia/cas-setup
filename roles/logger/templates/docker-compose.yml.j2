version: "3.5"

services:

  logger-back:
    build:
      context: dashboard-logger-back
      dockerfile: Dockerfile
    container_name: cas-logger-back
    hostname: logger-back
    restart: unless-stopped
    depends_on:
      - mongo
    expose:
      - "80"
    environment:
      FLASK_BASE_PATH: "{{ logger_back_path }}"
      FLASK_PORT: 80
      FLASK_SECRET_KEY: "{{ flask_secret }}"
      MONGO_DB: "logger_db"
      MONGO_HOST: "logger-db"
      MONGO_USER: "root"
      MONGO_PASSWORD: "{{ db_password }}"
    networks:
      - cas-network

  mongo:
    image: mongo:4.4.19
    container_name: cas-logger-db
    hostname: logger-db
    restart: unless-stopped
    expose:
      - "27017"
    environment:
      MONGO_INITDB_DATABASE: "logger_db"
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "{{ db_password }}"
    volumes:
      - ./mongo-data:/data/db
    networks:
      - cas-network


  logger-front:
    build:
      context: dashboard-logger-front
      dockerfile: Dockerfile
      args:
        PUBLIC_URL: "{{ schema }}://{{ domain }}{{ logger_front_path }}"
        LOGGER_URL: "{{ schema }}://{{ domain }}{{ logger_back_path }}"
        GITLAB_URL: "{{ schema }}://{{ domain }}{{ gitlab_path }}"
        TAIGA_URL: "{{ schema }}://{{ domain }}{{ taiga_path }}"
        MATTERMOST_URL: "{{ schema }}://{{ domain }}{{ mattermost_path }}"
        SONARQUBE_URL: "{{ schema }}://{{ domain }}{{ sonarqube_path }}"
    container_name: cas-dashboard-front
    hostname: logger-front
    restart: unless-stopped
    depends_on:
      - logger-back
    expose:
      - "80"
    networks:
      - cas-network


networks:
  cas-network:
    external: true
    name: {{ docker_network }}
