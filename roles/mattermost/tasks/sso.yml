- name: Retreive Gitlab SSO tokens
  become: true
  block:
    - name: Client id
      block:
        - slurp:
            src: "{{ mattermost_directory }}/.secrets/gitlab_sso_client.txt"
          failed_when: false
          register: slurp_res
        - set_fact:
            oauth_client: "{{ slurp_res.content | default('') | b64decode }}"
            
    - name: Secret
      block:
        - slurp:
            src: "{{ mattermost_directory }}/.secrets/gitlab_sso_secret.txt"
          failed_when: false
          register: slurp_res
        - set_fact:
            oauth_secret: "{{ slurp_res.content | default('') | b64decode }}"


- name: Create OAuth tokens
  when: (oauth_secret == '') or (oauth_client == '')
  block:
    - name: Create a Gitlab OAuth application
      ansible.builtin.uri:
        url: "{{ schema }}://{{ domain }}{{ gitlab_path }}/api/v4/applications"
        method: POST
        headers:
          PRIVATE-TOKEN: "{{ gitlab_access_token }}"
        body_format: json
        body:
          name: "Mattermost"
          redirect_uri: "{{ schema }}://{{ domain }}{{ mattermost_path }}/login/gitlab/complete\n{{ schema }}://{{ domain }}{{ mattermost_path }}/signup/gitlab/complete"
          scopes: "api"
        status_code: 201
      register: gitlab_oauth

    - name: Save tokens
      become: true
      block:
        - name: Client id
          copy:
            dest: "{{ mattermost_directory }}/.secrets/gitlab_sso_client.txt"
            content: "{{ gitlab_oauth.json.application_id }}"
        - name: Secret
          copy:
            dest: "{{ mattermost_directory }}/.secrets/gitlab_sso_secret.txt"
            content: "{{ gitlab_oauth.json.secret }}"

    - name: Retreive tokens
      set_fact:
        oauth_client: "{{ gitlab_oauth.json.application_id }}"
        oauth_secret: "{{ gitlab_oauth.json.secret }}"


- name: Auth to mmctl
  become: true
  community.docker.docker_container_exec:
    container: cas-mattermost
    command: mmctl auth login {{ schema }}://{{ domain }}{{ mattermost_path }} --name cas-mm-server --username {{ mattermost_username }} --password {{ mattermost_password }}
    chdir: /


- name: Setup Gitlab SSO
  become: true
  block:
    - community.docker.docker_container_exec:
        container: cas-mattermost
        command: mmctl config set GitLabSettings.Enable true
        chdir: /

    - community.docker.docker_container_exec:
        container: cas-mattermost
        command: mmctl config set GitLabSettings.Id {{ oauth_client }}
        chdir: /

    - community.docker.docker_container_exec:
        container: cas-mattermost
        command: mmctl config set GitLabSettings.Secret {{ oauth_secret }}
        chdir: /

    - community.docker.docker_container_exec:
        container: cas-mattermost
        command: mmctl config set GitLabSettings.AuthEndpoint {{ schema }}://{{ domain }}{{ gitlab_path }}/oauth/authorize
        chdir: /

    - community.docker.docker_container_exec:
        container: cas-mattermost
        command: mmctl config set GitLabSettings.TokenEndpoint {{ schema }}://{{ domain }}{{ gitlab_path }}/oauth/token
        chdir: /

    - community.docker.docker_container_exec:
        container: cas-mattermost
        command: mmctl config set GitLabSettings.UserAPIEndpoint {{ schema }}://{{ domain }}{{ gitlab_path }}/api/v4/user
        chdir: /


- name: Delete credentials from mmctl
  become: true
  community.docker.docker_container_exec:
    container: cas-mattermost
    command: mmctl auth delete cas-mm-server
    chdir: /