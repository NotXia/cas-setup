- name: Create root directory
  become: true
  file:
    path: "{{ taiga_directory }}"
    state: directory
    mode: '0770'

- name: Create required directories
  become: true
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ taiga_directory }}/db-data"
    - "{{ taiga_directory }}/media-data"
    - "{{ taiga_directory }}/.secrets"


- name: Retreive passwords
  become: true
  block:
    - name: Database/RabbitMQ password
      block:
      - name: Check if password exists
        stat:
          path: "{{ taiga_directory }}/.secrets/password.txt"
        register: password_file
      - name: Generate password
        when: not password_file.stat.exists
        copy:
          dest: "{{ taiga_directory }}/.secrets/password.txt"
          content: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits') }}"
    - name: Read password
      block:
        - slurp:
            src: "{{ taiga_directory }}/.secrets/password.txt"
          register: db_password_slurp
        - set_fact:
            password: "{{ db_password_slurp.content | b64decode }}"

    - name: Taiga secret
      block:
      - name: Check if secret exists
        stat:
          path: "{{ taiga_directory }}/.secrets/secret.txt"
        register: secret_file
      - name: Generate secret
        when: not secret_file.stat.exists
        copy:
          dest: "{{ taiga_directory }}/.secrets/secret.txt"
          content: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits') }}"
      - name: Read secret
        block:
          - slurp:
              src: "{{ taiga_directory }}/.secrets/secret.txt"
            register: db_password_slurp
          - set_fact:
              secret: "{{ db_password_slurp.content | b64decode }}"


- name: Retreive Gitlab SSO tokens
  become: true
  block:
    - name: Client id
      block:
        - slurp:
            src: "{{ taiga_directory }}/.secrets/gitlab_sso_client.txt"
          failed_when: false
          register: slurp_res
        - set_fact:
            taiga_gitlab_clientid: "{{ slurp_res.content | default('') | b64decode }}"
            
    - name: Secret
      block:
        - slurp:
            src: "{{ taiga_directory }}/.secrets/gitlab_sso_secret.txt"
          failed_when: false
          register: slurp_res
        - set_fact:
            taiga_gitlab_clientsecret: "{{ slurp_res.content | default('') | b64decode }}"
      

- name: Copy nginx configuration
  become: true
  template:
    src: taiga.conf
    dest: "{{ taiga_directory }}/taiga.conf"
    mode: '0770'

- name: Copy docker-compose
  become: true
  template:
    src: docker-compose.yml.j2
    dest: "{{ taiga_directory }}/docker-compose.yml"
    owner: root
    mode: '0700'

- name: Docker compose up
  become: true
  community.docker.docker_compose:
    project_src: "{{ taiga_directory }}"
    remove_orphans: true


- name: Copy nginx configuration
  become: true
  block:
    - template:
        src: nginx.conf.j2
        dest: "{{ nginx_directory }}/includes/taiga.conf"
        owner: root
        mode: '0700'
      register: nginx_conf
    - ansible.builtin.set_fact:
        when: nginx_conf.changed
        should_restart_nginx: true


- name: Copy backup script
  become: true
  template:
    src: backup.sh.j2
    dest: "{{ taiga_directory }}/backup.sh"
    mode: '0770'

- name: Backup cron
  become: true
  ansible.builtin.cron:
    name: Taiga backup
    weekday: "{{ backup_weekday }}"
    minute: "{{ backup_minute }}"
    hour: "{{ backup_hour }}"
    user: root
    job: "{{ taiga_directory }}/backup.sh"