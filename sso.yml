- name: Gitlab SSO
  hosts: cas-server


  vars_prompt:

    - name: sonarqube_username
      prompt: Sonarqube administrator's username (if needed)
      private: false
    - name: sonarqube_password
      prompt: Sonarqube administrator's password (if needed)
    
    - name: mattermost_username
      prompt: Mattermost administrator's username (if needed)
      private: false
    - name: mattermost_password
      prompt: Mattermost administrator's password (if needed)


  tasks:
    - name: "Create Gitlab root Access token"
      become: true
      block:
        - name: "Generate token value"
          set_fact:
            gitlab_access_token: "{{ lookup('ansible.builtin.password', '/dev/null length=20 chars=ascii_letters,digits') }}"
        - name: "Create token"
          community.docker.docker_container_exec:
            container: cas-gitlab
            command: "gitlab-rails runner \"token = User.find_by_username('root').personal_access_tokens.create(scopes: [:api], name: 'Ansible SSO setup'); token.set_token('{{ gitlab_access_token }}'); token.save!\""
            chdir: /


    - name: Setup SSO in Taiga
      when: install["taiga"]
      include_role:
        name: taiga
        tasks_from: sso

    - name: Setup SSO in Sonarqube
      when: install["sonarqube"]
      include_role:
        name: sonarqube
        tasks_from: sso

    - name: Setup SSO in Mattermost
      when: install["mattermost"]
      include_role:
        name: mattermost
        tasks_from: sso

    - name: Setup SSO in Git Dashboard
      when: install["git_dashboard"]
      include_role:
        name: git_dashboard
        tasks_from: sso


    - name: "Remove Gitlab root Access token"
      become: true
      community.docker.docker_container_exec:
        container: cas-gitlab
        command: "gitlab-rails runner \"PersonalAccessToken.find_by_token('{{ gitlab_access_token }}').revoke!\""
        chdir: /